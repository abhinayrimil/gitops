name: GitOps IAC

on:
    push:
      branches:
        - main
      paths:
        - iac/**
    pull_request:
      branches:
         - main
      paths:
        - iac/** 
        
env:

    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    BUCKET_TF_STATE: ${{ secrets.S3_BUCKET_TF }}
    AWS_REGION: ap-south-1

jobs:
    terraform:
        name: "Applying terraform code changes"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./iac

        steps:
        - name: Checkout source code
          uses: actions/checkout@v4    

        - name: Setup Terraform with specified version on the runner
          uses: hashicorp/setup-terraform@v3

        - name: Validate Environment Variables
          run: |
            echo "Validating environment variables..."
            if [ -z "$AWS_ACCESS_KEY_ID" ]; then echo "ERROR: AWS_ACCESS_KEY_ID is not set"; exit 1; fi
            if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then echo "ERROR: AWS_SECRET_ACCESS_KEY is not set"; exit 1; fi
            if [ -z "$BUCKET_TF_STATE" ]; then echo "ERROR: BUCKET_TF_STATE is not set"; exit 1; fi
            if [ -z "$AWS_REGION" ]; then echo "ERROR: AWS_REGION is not set"; exit 1; fi
            echo "All required environment variables are set."

        - name: Terraform Init
          id: init
          run: terraform init -backend-config "bucket=$BUCKET_TF_STATE"

        - name: Terraform Format
          id: fmt
          run: terraform fmt -check
          continue-on-error: true

        - name: Terraform Validate
          id: validate
          run: terraform validate

        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color -input=false -out planfile
          continue-on-error: true

        - name: Terraform Plan Status
          if: steps.plan.outcome == 'failure'
          run: exit 1

        - name: Terraform Apply
          id: apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false -parallelism=1 planfile